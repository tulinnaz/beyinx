// index.js
const express = require('express');
const dotenv = require('dotenv');
const fetch = require('node-fetch'); // API Ã§aÄŸrÄ±larÄ± iÃ§in
const app = express();
const port = process.env.PORT || 3000;

// Ortam deÄŸiÅŸkenlerini yÃ¼kle
dotenv.config();

// Middleware: JSON isteklerini iÅŸle
app.use(express.json());

// Basit bir doÄŸrulama middleware'i
const validateInput = (req, res, next) => {
  const { message } = req.body;
  if (!message || typeof message !== 'string') {
    return res.status(400).json({ error: 'GeÃ§erli bir mesaj gÃ¶nderin.' });
  }
  next();
};

// Grok API ile iletiÅŸim kuran fonksiyon
async function getGrokResponse(userMessage) {
  const apiKey = process.env.XAI_API_KEY; // xAI API anahtarÄ±nÄ±zÄ± .env dosyasÄ±ndan alÄ±n
  const apiUrl = 'https://api.x.ai/v1/grok'; // Ã–rnek API endpoint'i

  try {
    const response = await fetch(apiUrl, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${apiKey}`,
      },
      body: JSON.stringify({
        prompt: userMessage,
        max_tokens: 100, // YanÄ±t uzunluÄŸunu sÄ±nÄ±rlÄ± tutuyoruz
      }),
    });

    const data = await response.json();
    if (data && data.response) {
      return data.response; // Grok'un yanÄ±tÄ±nÄ± dÃ¶ndÃ¼r
    } else {
      throw new Error('Grok API yanÄ±tÄ± alÄ±namadÄ±.');
    }
  } catch (error) {
    console.error('Grok API hatasÄ±:', error.message);
    return 'ÃœzgÃ¼nÃ¼m, bir hata oluÅŸtu. LÃ¼tfen tekrar deneyin!';
  }
}

// POST endpoint: KullanÄ±cÄ± mesajÄ±nÄ± al ve yanÄ±t ver
app.post('/chat', validateInput, async (req, res) => {
  const { message } = req.body;

  // KullanÄ±cÄ± "merhaba" yazarsa Ã¶zel bir baÅŸlangÄ±Ã§ yanÄ±tÄ±
  if (message.toLowerCase() === 'merhaba') {
    const grokResponse = await getGrokResponse('Merhaba! NasÄ±lsÄ±n?');
    res.json({ reply: grokResponse || 'Merhaba! ðŸ˜Š NasÄ±lsÄ±n, ne konuÅŸalÄ±m?' });
  } else {
    // DiÄŸer mesajlar iÃ§in Grok'a sor
    const grokResponse = await getGrokResponse(message);
    res.json({ reply: grokResponse });
  }
});

// Sunucuyu baÅŸlat
app.listen(port, () => {
  console.log(`Sunucu http://localhost:${port} adresinde Ã§alÄ±ÅŸÄ±yor`);
});{
  "name": "aria-ai-agent",
  "version": "1.0.0",
  "description": "AI powered chat application",
  "main": "index.js",
  "scripts": {
    "start": "node index.js",
    "dev": "nodemon index.js",
    "test": "jest",
    "lint": "eslint .",
    "format": "prettier --write ."
  },
  "keywords": ["ai", "chat", "express", "nodejs"],
  "author": "Your Name <your.email@example.com>",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/yourusername/aria-ai-agent.git"
  },
  "dependencies": {
    "express": "^4.18.2",
    "dotenv": "^16.0.3",
    "@xai/grok": "^1.0.0" // Ã–rnek AI baÄŸÄ±mlÄ±lÄ±ÄŸÄ±, gerekirse ekleyin
  },
  "devDependencies": {
    "nodemon": "^3.0.1",
    "jest": "^29.5.0",
    "eslint": "^8.0.0",
    "prettier": "^2.8.0"
  },
  "engines": {
    "node": ">=18.0.0"
  }
}


   {
  "name": "aria-ai-agent",
  "version": "1.0.0",
  "description": "AI powered chat application",
  "main": "index.js",
  "scripts": {
    "start": "node index.js",
    "dev": "nodemon index.js"
  },
  "keywords": ["ai", "chat", "express", "nodejs"],
  "author": "Your Name",
  "license": "MIT",
  "dependencies": {
    "express": "^4.18.2"
  },
  "devDependencies": {
    "nodemon": "^3.0.1"
  },
  "engines": {
    "node": ">=18.0.0"
  }
}
